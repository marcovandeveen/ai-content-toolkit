{
  "openapi": "3.1.0",
  "info": {
    "title": "JW Platform Management API v2 - Media Endpoints Only",
    "version": "0.2"
  },
  "paths": {
    "/v2/sites/{site_id}/media/{media_id}/images/": {
      "post": {
        "summary": "Create an additional image for media",
        "description": "Before you can upload a new image, you need to create a new image first. This endpoint allows you to create a new image resource. In the response, you'll receive `upload_link` or `upload_id` and `upload_token` depending on the `upload.method` provided.\n**NOTE:** If the site already has 40 unique labels, a request to create an image with a new label will be rejected.\n",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "label": {
                            "type": "string",
                            "format": "string",
                            "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                            "example": "roku-portrait"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "upload": {
                        "type": "object",
                        "description": "Method and information required to upload and process the image",
                        "properties": {
                          "method": {
                            "description": "Upload method\n\n**Possible values**:\n- `direct`: Best for uploading image files on a local machine\n\n- `fetch`: Best for uploading images files hosted on another platform\n\n- `multipart`: Best for uploading image files on a local machine that are uploaded in chunks\n",
                            "type": "string",
                            "example": "direct",
                            "enum": [
                              "direct",
                              "fetch",
                              "multipart"
                            ]
                          },
                          "download_url": {
                            "description": "URL of the image to fetch\n\nThis is **required** for the `fetch` upload method\n"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request to add image successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "schema": {
                              "type": "string",
                              "example": "https://schema.jwplayer.com/types/thumbnail.json"
                            },
                            "id": {
                              "description": "Unique identifier for a resource",
                              "type": "string",
                              "minLength": 8,
                              "maxLength": 8,
                              "example": "Ny05CEfj",
                              "pattern": "^[A-Za-z0-9]+$"
                            },
                            "created": {
                              "type": "string",
                              "description": "Date and time at which the resource was created",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "last_modified": {
                              "type": "string",
                              "description": "Date and time at which the resource was most recently modified",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "type": {
                              "type": "string",
                              "description": "Name of the type of resource."
                            },
                            "relationships": {
                              "type": "object",
                              "description": "Ancilliary resources associated to the primary resource being read"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "format": "string",
                                  "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                                  "example": "roku-portrait"
                                }
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "image_data": {
                              "description": "Object containing information about the image\n",
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "width": {
                                  "description": "Width in pixels of the original image\n",
                                  "type": "integer",
                                  "example": 1920
                                },
                                "height": {
                                  "description": "Height in pixels of the original image\n",
                                  "type": "integer",
                                  "example": 1080
                                },
                                "mime_type": {
                                  "description": "MIME type of the original image\n",
                                  "type": "string",
                                  "enum": [
                                    "image/jpeg",
                                    "image/png",
                                    "image/webp"
                                  ],
                                  "example": "image/jpeg"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "upload_link": {
                          "type": "string",
                          "description": "URL to be used for uploads\nThis is returned only when `upload.method` is `direct`.\n"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "API Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List additional images for media",
        "description": "Get a list of all images for this media\n",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "images": {
                          "description": "Array with all images for the media\n",
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "format": "string",
                                        "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                                        "example": "roku-portrait"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "image_data": {
                                    "description": "Object containing information about the image\n",
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "width": {
                                        "description": "Width in pixels of the original image\n",
                                        "type": "integer",
                                        "example": 1920
                                      },
                                      "height": {
                                        "description": "Height in pixels of the original image\n",
                                        "type": "integer",
                                        "example": 1080
                                      },
                                      "mime_type": {
                                        "description": "MIME type of the original image\n",
                                        "type": "string",
                                        "enum": [
                                          "image/jpeg",
                                          "image/png",
                                          "image/webp"
                                        ],
                                        "example": "image/jpeg"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "API error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/images/{image_id}/": {
      "get": {
        "summary": "Get an additional image",
        "description": "Request details for an image resource with a specific image ID\n",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "image_id",
            "description": "Unique alphanumeric ID of the image",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved image",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "label": {
                              "type": "string",
                              "format": "string",
                              "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                              "example": "roku-portrait"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "image_data": {
                          "description": "Object containing information about the image\n",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "width": {
                              "description": "Width in pixels of the original image\n",
                              "type": "integer",
                              "example": 1920
                            },
                            "height": {
                              "description": "Height in pixels of the original image\n",
                              "type": "integer",
                              "example": 1080
                            },
                            "mime_type": {
                              "description": "MIME type of the original image\n",
                              "type": "string",
                              "enum": [
                                "image/jpeg",
                                "image/png",
                                "image/webp"
                              ],
                              "example": "image/jpeg"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "API Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update an additional image",
        "description": "Update an image resource with a specific image ID\n",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "image_id",
            "description": "Unique alphanumeric ID of the image",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "metadata": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "label": {
                        "type": "string",
                        "format": "string",
                        "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                        "example": "roku-portrait"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated image",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "label": {
                              "type": "string",
                              "format": "string",
                              "description": "Label associated with the image\n\nThere can be a maximum of 40 labels per site. A label can be associated with multiple images.\n \nThis value can be used to access the image via the Delivery API.\n",
                              "example": "roku-portrait"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "image_data": {
                          "description": "Object containing information about the image\n",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "width": {
                              "description": "Width in pixels of the original image\n",
                              "type": "integer",
                              "example": 1920
                            },
                            "height": {
                              "description": "Height in pixels of the original image\n",
                              "type": "integer",
                              "example": 1080
                            },
                            "mime_type": {
                              "description": "MIME type of the original image\n",
                              "type": "string",
                              "enum": [
                                "image/jpeg",
                                "image/png",
                                "image/webp"
                              ],
                              "example": "image/jpeg"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "API Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an additional image",
        "description": "Delete an image resource with a specific image ID\n",
        "tags": [
          "image"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "image_id",
            "description": "Unique alphanumeric ID of the image",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "default": {
            "description": "API Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/": {
      "get": {
        "summary": "List media",
        "description": "List media",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "page",
            "description": "Sets the page number for pagination. First page is `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_length",
            "description": "Sets the page length (number of items you get in the response) for pagination\n\nIf `page_length` is not specified, the default value will be set.\n\nDefault: `10`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "q",
            "description": "Allows for [querying results](https://developer.jwplayer.com/jwplayer/reference/building-a-request#query-parameter-q)\n\nExample: `title:+a title`\n\nMedia can be queried by the following attributes:\n  - `author`\n  - `category`\n  - `created`\n  - `custom_params`\n  - `description`\n  - `error_message`\n  - `external_id`\n  - `duration`\n  - `hosting_type`\n  - `id`\n  - `last_modified`\n  - `media_type`\n  - `permalink`\n  - `protection_rule_key`\n  - `publish_end_date`\n  - `publish_start_date`\n  - `source_format`\n  - `source_url`\n  - `status`\n  - `tags`\n  - `title`\n  - `trim_in_point`\n  - `trim_out_point`\n\nQuerying for a specific `custom_params` requires a match using the `AND` logical operator:\n\n`custom_params: ( name: \"abc\" AND value: \"123\" )`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "description": "Allows for sorting results\n\nExample: `sort=created:dsc`\n\nSort order can be one of `asc`, `dsc`\n\nMedia can be sorted by the following attributes:\n  - `created`\n  - `duration`\n  - `last_modified`\n  - `publish_end_date`\n  - `publish_start_date`\n  - `status`\n  - `title`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created:dsc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "media": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "A maximum of 5000 characters is permitted.",
                                        "example": "My Media Title"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "A maximum of 25000 characters is permitted.",
                                        "example": "My media description"
                                      },
                                      "author": {
                                        "type": "string",
                                        "description": "A maximum of 256 characters is permitted.",
                                        "example": "Jane Doe"
                                      },
                                      "duration": {
                                        "type": "number",
                                        "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                                      },
                                      "permalink": {
                                        "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                                        "type": "string",
                                        "example": "http://www.mysite.com"
                                      },
                                      "category": {
                                        "description": "IAB category",
                                        "type": "string",
                                        "enum": [
                                          "Automotive",
                                          "Books and Literature",
                                          "Business and Finance",
                                          "Careers",
                                          "Education",
                                          "Events and Attractions",
                                          "Family and Relationships",
                                          "Fine Art",
                                          "Food & Drink",
                                          "Healthy Living",
                                          "Hobbies & Interests",
                                          "Home & Garden",
                                          "Medical Health",
                                          "Movies",
                                          "Music and Audio",
                                          "News and Politics",
                                          "Personal Finance",
                                          "Pets",
                                          "Pop Culture",
                                          "Real Estate",
                                          "Religion & Spirituality",
                                          "Science",
                                          "Shopping",
                                          "Sports",
                                          "Style & Fashion",
                                          "Technology & Computing",
                                          "Television",
                                          "Travel",
                                          "Video Gaming"
                                        ],
                                        "example": "Automotive"
                                      },
                                      "publish_start_date": {
                                        "description": "Start date and time in ISO 8601 format when media is available for streaming",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-10-03T21:19:36.602019+00:00"
                                      },
                                      "publish_end_date": {
                                        "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2018-10-03T21:19:36.602019+00:00"
                                      },
                                      "tags": {
                                        "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "test1",
                                          "happy1",
                                          "one",
                                          "two",
                                          "four"
                                        ]
                                      },
                                      "language": {
                                        "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                                        "allOf": [
                                          {
                                            "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                            "type": "string",
                                            "enum": [
                                              "aa",
                                              "ab",
                                              "ae",
                                              "af",
                                              "ak",
                                              "am",
                                              "an",
                                              "ar",
                                              "as",
                                              "av",
                                              "ay",
                                              "az",
                                              "ba",
                                              "be",
                                              "bg",
                                              "bh",
                                              "bi",
                                              "bm",
                                              "bn",
                                              "bo",
                                              "br",
                                              "bs",
                                              "ca",
                                              "ce",
                                              "ch",
                                              "co",
                                              "cr",
                                              "cs",
                                              "cu",
                                              "cv",
                                              "cy",
                                              "da",
                                              "de",
                                              "dv",
                                              "dz",
                                              "ee",
                                              "el",
                                              "en",
                                              "eo",
                                              "es",
                                              "et",
                                              "eu",
                                              "fa",
                                              "ff",
                                              "fi",
                                              "fj",
                                              "fo",
                                              "fr",
                                              "fy",
                                              "ga",
                                              "gd",
                                              "gl",
                                              "gn",
                                              "gu",
                                              "gv",
                                              "ha",
                                              "he",
                                              "hi",
                                              "ho",
                                              "hr",
                                              "ht",
                                              "hu",
                                              "hy",
                                              "hz",
                                              "ia",
                                              "id",
                                              "ie",
                                              "ig",
                                              "ii",
                                              "ik",
                                              "io",
                                              "is",
                                              "it",
                                              "iu",
                                              "ja",
                                              "jv",
                                              "ka",
                                              "kg",
                                              "ki",
                                              "kj",
                                              "kk",
                                              "kl",
                                              "km",
                                              "kn",
                                              "ko",
                                              "kr",
                                              "ks",
                                              "ku",
                                              "kv",
                                              "kw",
                                              "ky",
                                              "la",
                                              "lb",
                                              "lg",
                                              "li",
                                              "ln",
                                              "lo",
                                              "lt",
                                              "lu",
                                              "lv",
                                              "mg",
                                              "mh",
                                              "mi",
                                              "mk",
                                              "ml",
                                              "mn",
                                              "mr",
                                              "ms",
                                              "mt",
                                              "my",
                                              "na",
                                              "nb",
                                              "nd",
                                              "ne",
                                              "ng",
                                              "nl",
                                              "nn",
                                              false,
                                              "nr",
                                              "nv",
                                              "ny",
                                              "oc",
                                              "oj",
                                              "om",
                                              "or",
                                              "os",
                                              "pa",
                                              "pi",
                                              "pl",
                                              "ps",
                                              "pt",
                                              "qu",
                                              "rm",
                                              "rn",
                                              "ro",
                                              "ru",
                                              "rw",
                                              "sa",
                                              "sc",
                                              "sd",
                                              "se",
                                              "sg",
                                              "si",
                                              "sk",
                                              "sl",
                                              "sm",
                                              "sn",
                                              "so",
                                              "sq",
                                              "sr",
                                              "ss",
                                              "st",
                                              "su",
                                              "sv",
                                              "sw",
                                              "ta",
                                              "te",
                                              "tg",
                                              "th",
                                              "ti",
                                              "tk",
                                              "tl",
                                              "tn",
                                              "to",
                                              "tr",
                                              "ts",
                                              "tt",
                                              "tw",
                                              "ty",
                                              "ug",
                                              "uk",
                                              "ur",
                                              "uz",
                                              "ve",
                                              "vi",
                                              "vo",
                                              "wa",
                                              "wo",
                                              "xh",
                                              "yi",
                                              "yo",
                                              "za",
                                              "zh",
                                              "zu"
                                            ]
                                          }
                                        ]
                                      },
                                      "custom_params": {
                                        "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string",
                                          "description": "A maximum of 7500 characters is permitted."
                                        },
                                        "example": {
                                          "param1": "value1"
                                        }
                                      }
                                    }
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "protection_rule": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "Unique identifier for a resource",
                                            "type": "string",
                                            "minLength": 8,
                                            "maxLength": 8,
                                            "example": "Ny05CEfj",
                                            "pattern": "^[A-Za-z0-9]+$"
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Resource type"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "status": {
                                    "description": "Media upload status",
                                    "type": "string",
                                    "enum": [
                                      "created",
                                      "processing",
                                      "ready",
                                      "updating",
                                      "failed"
                                    ],
                                    "example": "ready"
                                  },
                                  "media_type": {
                                    "type": "string",
                                    "enum": [
                                      "audio",
                                      "video"
                                    ],
                                    "example": "video"
                                  },
                                  "hosting_type": {
                                    "description": "Indicates whether or not the media is hosted with JW Player or not",
                                    "type": "string",
                                    "enum": [
                                      "external",
                                      "hosted"
                                    ],
                                    "example": "hosted"
                                  },
                                  "mime_type": {
                                    "type": "string",
                                    "enum": [
                                      "video/mp4",
                                      "video/webm",
                                      "video/flv",
                                      "audio/aac",
                                      "audio/mpeg",
                                      "audio/ogg",
                                      "application/vnd.apple.mpegurl",
                                      "application/smil+xml",
                                      "application/dash+xml",
                                      "video/flash"
                                    ]
                                  },
                                  "error_message": {
                                    "description": "Message describing an issue uploading or processing the media",
                                    "type": "string",
                                    "example": "Something went wrong!"
                                  },
                                  "external_id": {
                                    "type": "string",
                                    "description": "Non-JWP ID for the media\nA maximum of 64 characters is permitted.",
                                    "example": "myvideo123"
                                  },
                                  "duration": {
                                    "description": "Length of the media in seconds",
                                    "type": "number",
                                    "example": 437
                                  },
                                  "trim_in_point": {
                                    "type": "string",
                                    "description": "Starting point to trim the video",
                                    "example": "00:00:01"
                                  },
                                  "trim_out_point": {
                                    "type": "string",
                                    "description": "Ending point to trim the video",
                                    "example": "00:01:00.123"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a media",
        "description": "Create a media",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "upload": {
                    "type": "object",
                    "description": "Metadata describing the upload method and information required to process the upload",
                    "properties": {
                      "method": {
                        "description": "Upload method\n\n**Possible values**:\n- `direct`: Can upload media files up to **5GB** and on a local machine\n\n- `external`: Use for registering **self-hosted** content with your JW Player account\n\n- `fetch`: Can upload media files up to **100GB** and hosted on another platform (**only** if using the v2 Management API)\n\n- `multipart`: Can upload media files up to **100GB** and on a local machine (**only** if using the v2 Management API)\n",
                        "type": "string",
                        "enum": [
                          "fetch",
                          "direct",
                          "multipart",
                          "external"
                        ]
                      },
                      "mime_type": {
                        "description": "MIME type for the uploaded media, required for the `external` upload method",
                        "type": "string",
                        "enum": [
                          "video/mp4",
                          "video/webm",
                          "video/flv",
                          "audio/aac",
                          "audio/mpeg",
                          "audio/ogg",
                          "application/vnd.apple.mpegurl",
                          "application/smil+xml",
                          "application/dash+xml",
                          "video/flash"
                        ]
                      },
                      "source_url": {
                        "description": "URL of the external media, required for the `external` upload method",
                        "type": "string"
                      },
                      "download_url": {
                        "description": "URL of the media to fetch\n\nThis is **required** for the `fetch` upload method\n"
                      },
                      "trim_in_point": {
                        "type": "string",
                        "description": "Starting point to trim the video, not applicable to the `external` upload method",
                        "example": "00:00:01"
                      },
                      "trim_out_point": {
                        "type": "string",
                        "description": "Ending point to trim the video, not applicable to the `external` upload method",
                        "example": "00:01:00.123"
                      }
                    }
                  },
                  "metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "A maximum of 5000 characters is permitted.",
                            "example": "My Media Title"
                          },
                          "description": {
                            "type": "string",
                            "description": "A maximum of 25000 characters is permitted.",
                            "example": "My media description"
                          },
                          "author": {
                            "type": "string",
                            "description": "A maximum of 256 characters is permitted.",
                            "example": "Jane Doe"
                          },
                          "duration": {
                            "type": "number",
                            "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                          },
                          "permalink": {
                            "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                            "type": "string",
                            "example": "http://www.mysite.com"
                          },
                          "category": {
                            "description": "IAB category",
                            "type": "string",
                            "enum": [
                              "Automotive",
                              "Books and Literature",
                              "Business and Finance",
                              "Careers",
                              "Education",
                              "Events and Attractions",
                              "Family and Relationships",
                              "Fine Art",
                              "Food & Drink",
                              "Healthy Living",
                              "Hobbies & Interests",
                              "Home & Garden",
                              "Medical Health",
                              "Movies",
                              "Music and Audio",
                              "News and Politics",
                              "Personal Finance",
                              "Pets",
                              "Pop Culture",
                              "Real Estate",
                              "Religion & Spirituality",
                              "Science",
                              "Shopping",
                              "Sports",
                              "Style & Fashion",
                              "Technology & Computing",
                              "Television",
                              "Travel",
                              "Video Gaming"
                            ],
                            "example": "Automotive"
                          },
                          "publish_start_date": {
                            "description": "Start date and time in ISO 8601 format when media is available for streaming",
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-10-03T21:19:36.602019+00:00"
                          },
                          "publish_end_date": {
                            "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-10-03T21:19:36.602019+00:00"
                          },
                          "tags": {
                            "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "test1",
                              "happy1",
                              "one",
                              "two",
                              "four"
                            ]
                          },
                          "language": {
                            "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                            "allOf": [
                              {
                                "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                "type": "string",
                                "enum": [
                                  "aa",
                                  "ab",
                                  "ae",
                                  "af",
                                  "ak",
                                  "am",
                                  "an",
                                  "ar",
                                  "as",
                                  "av",
                                  "ay",
                                  "az",
                                  "ba",
                                  "be",
                                  "bg",
                                  "bh",
                                  "bi",
                                  "bm",
                                  "bn",
                                  "bo",
                                  "br",
                                  "bs",
                                  "ca",
                                  "ce",
                                  "ch",
                                  "co",
                                  "cr",
                                  "cs",
                                  "cu",
                                  "cv",
                                  "cy",
                                  "da",
                                  "de",
                                  "dv",
                                  "dz",
                                  "ee",
                                  "el",
                                  "en",
                                  "eo",
                                  "es",
                                  "et",
                                  "eu",
                                  "fa",
                                  "ff",
                                  "fi",
                                  "fj",
                                  "fo",
                                  "fr",
                                  "fy",
                                  "ga",
                                  "gd",
                                  "gl",
                                  "gn",
                                  "gu",
                                  "gv",
                                  "ha",
                                  "he",
                                  "hi",
                                  "ho",
                                  "hr",
                                  "ht",
                                  "hu",
                                  "hy",
                                  "hz",
                                  "ia",
                                  "id",
                                  "ie",
                                  "ig",
                                  "ii",
                                  "ik",
                                  "io",
                                  "is",
                                  "it",
                                  "iu",
                                  "ja",
                                  "jv",
                                  "ka",
                                  "kg",
                                  "ki",
                                  "kj",
                                  "kk",
                                  "kl",
                                  "km",
                                  "kn",
                                  "ko",
                                  "kr",
                                  "ks",
                                  "ku",
                                  "kv",
                                  "kw",
                                  "ky",
                                  "la",
                                  "lb",
                                  "lg",
                                  "li",
                                  "ln",
                                  "lo",
                                  "lt",
                                  "lu",
                                  "lv",
                                  "mg",
                                  "mh",
                                  "mi",
                                  "mk",
                                  "ml",
                                  "mn",
                                  "mr",
                                  "ms",
                                  "mt",
                                  "my",
                                  "na",
                                  "nb",
                                  "nd",
                                  "ne",
                                  "ng",
                                  "nl",
                                  "nn",
                                  false,
                                  "nr",
                                  "nv",
                                  "ny",
                                  "oc",
                                  "oj",
                                  "om",
                                  "or",
                                  "os",
                                  "pa",
                                  "pi",
                                  "pl",
                                  "ps",
                                  "pt",
                                  "qu",
                                  "rm",
                                  "rn",
                                  "ro",
                                  "ru",
                                  "rw",
                                  "sa",
                                  "sc",
                                  "sd",
                                  "se",
                                  "sg",
                                  "si",
                                  "sk",
                                  "sl",
                                  "sm",
                                  "sn",
                                  "so",
                                  "sq",
                                  "sr",
                                  "ss",
                                  "st",
                                  "su",
                                  "sv",
                                  "sw",
                                  "ta",
                                  "te",
                                  "tg",
                                  "th",
                                  "ti",
                                  "tk",
                                  "tl",
                                  "tn",
                                  "to",
                                  "tr",
                                  "ts",
                                  "tt",
                                  "tw",
                                  "ty",
                                  "ug",
                                  "uk",
                                  "ur",
                                  "uz",
                                  "ve",
                                  "vi",
                                  "vo",
                                  "wa",
                                  "wo",
                                  "xh",
                                  "yi",
                                  "yo",
                                  "za",
                                  "zh",
                                  "zu"
                                ]
                              }
                            ]
                          },
                          "custom_params": {
                            "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "description": "A maximum of 7500 characters is permitted."
                            },
                            "example": {
                              "param1": "value1"
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "external_id": {
                            "type": "string",
                            "description": "ID for the media, generated by a non-JW Player platform or program\nA maximum of 64 characters is permitted.",
                            "example": "myvideo123"
                          }
                        }
                      }
                    ]
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "protection_rule": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for a resource",
                            "type": "string",
                            "minLength": 8,
                            "maxLength": 8,
                            "example": "Ny05CEfj",
                            "pattern": "^[A-Za-z0-9]+$"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "schema": {
                              "type": "string",
                              "example": "https://schema.jwplayer.com/types/thumbnail.json"
                            },
                            "id": {
                              "description": "Unique identifier for a resource",
                              "type": "string",
                              "minLength": 8,
                              "maxLength": 8,
                              "example": "Ny05CEfj",
                              "pattern": "^[A-Za-z0-9]+$"
                            },
                            "created": {
                              "type": "string",
                              "description": "Date and time at which the resource was created",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "last_modified": {
                              "type": "string",
                              "description": "Date and time at which the resource was most recently modified",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "type": {
                              "type": "string",
                              "description": "Name of the type of resource."
                            },
                            "relationships": {
                              "type": "object",
                              "description": "Ancilliary resources associated to the primary resource being read"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "A maximum of 5000 characters is permitted.",
                                  "example": "My Media Title"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "A maximum of 25000 characters is permitted.",
                                  "example": "My media description"
                                },
                                "author": {
                                  "type": "string",
                                  "description": "A maximum of 256 characters is permitted.",
                                  "example": "Jane Doe"
                                },
                                "duration": {
                                  "type": "number",
                                  "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                                },
                                "permalink": {
                                  "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                                  "type": "string",
                                  "example": "http://www.mysite.com"
                                },
                                "category": {
                                  "description": "IAB category",
                                  "type": "string",
                                  "enum": [
                                    "Automotive",
                                    "Books and Literature",
                                    "Business and Finance",
                                    "Careers",
                                    "Education",
                                    "Events and Attractions",
                                    "Family and Relationships",
                                    "Fine Art",
                                    "Food & Drink",
                                    "Healthy Living",
                                    "Hobbies & Interests",
                                    "Home & Garden",
                                    "Medical Health",
                                    "Movies",
                                    "Music and Audio",
                                    "News and Politics",
                                    "Personal Finance",
                                    "Pets",
                                    "Pop Culture",
                                    "Real Estate",
                                    "Religion & Spirituality",
                                    "Science",
                                    "Shopping",
                                    "Sports",
                                    "Style & Fashion",
                                    "Technology & Computing",
                                    "Television",
                                    "Travel",
                                    "Video Gaming"
                                  ],
                                  "example": "Automotive"
                                },
                                "publish_start_date": {
                                  "description": "Start date and time in ISO 8601 format when media is available for streaming",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-10-03T21:19:36.602019+00:00"
                                },
                                "publish_end_date": {
                                  "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2018-10-03T21:19:36.602019+00:00"
                                },
                                "tags": {
                                  "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "test1",
                                    "happy1",
                                    "one",
                                    "two",
                                    "four"
                                  ]
                                },
                                "language": {
                                  "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                                  "allOf": [
                                    {
                                      "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                      "type": "string",
                                      "enum": [
                                        "aa",
                                        "ab",
                                        "ae",
                                        "af",
                                        "ak",
                                        "am",
                                        "an",
                                        "ar",
                                        "as",
                                        "av",
                                        "ay",
                                        "az",
                                        "ba",
                                        "be",
                                        "bg",
                                        "bh",
                                        "bi",
                                        "bm",
                                        "bn",
                                        "bo",
                                        "br",
                                        "bs",
                                        "ca",
                                        "ce",
                                        "ch",
                                        "co",
                                        "cr",
                                        "cs",
                                        "cu",
                                        "cv",
                                        "cy",
                                        "da",
                                        "de",
                                        "dv",
                                        "dz",
                                        "ee",
                                        "el",
                                        "en",
                                        "eo",
                                        "es",
                                        "et",
                                        "eu",
                                        "fa",
                                        "ff",
                                        "fi",
                                        "fj",
                                        "fo",
                                        "fr",
                                        "fy",
                                        "ga",
                                        "gd",
                                        "gl",
                                        "gn",
                                        "gu",
                                        "gv",
                                        "ha",
                                        "he",
                                        "hi",
                                        "ho",
                                        "hr",
                                        "ht",
                                        "hu",
                                        "hy",
                                        "hz",
                                        "ia",
                                        "id",
                                        "ie",
                                        "ig",
                                        "ii",
                                        "ik",
                                        "io",
                                        "is",
                                        "it",
                                        "iu",
                                        "ja",
                                        "jv",
                                        "ka",
                                        "kg",
                                        "ki",
                                        "kj",
                                        "kk",
                                        "kl",
                                        "km",
                                        "kn",
                                        "ko",
                                        "kr",
                                        "ks",
                                        "ku",
                                        "kv",
                                        "kw",
                                        "ky",
                                        "la",
                                        "lb",
                                        "lg",
                                        "li",
                                        "ln",
                                        "lo",
                                        "lt",
                                        "lu",
                                        "lv",
                                        "mg",
                                        "mh",
                                        "mi",
                                        "mk",
                                        "ml",
                                        "mn",
                                        "mr",
                                        "ms",
                                        "mt",
                                        "my",
                                        "na",
                                        "nb",
                                        "nd",
                                        "ne",
                                        "ng",
                                        "nl",
                                        "nn",
                                        false,
                                        "nr",
                                        "nv",
                                        "ny",
                                        "oc",
                                        "oj",
                                        "om",
                                        "or",
                                        "os",
                                        "pa",
                                        "pi",
                                        "pl",
                                        "ps",
                                        "pt",
                                        "qu",
                                        "rm",
                                        "rn",
                                        "ro",
                                        "ru",
                                        "rw",
                                        "sa",
                                        "sc",
                                        "sd",
                                        "se",
                                        "sg",
                                        "si",
                                        "sk",
                                        "sl",
                                        "sm",
                                        "sn",
                                        "so",
                                        "sq",
                                        "sr",
                                        "ss",
                                        "st",
                                        "su",
                                        "sv",
                                        "sw",
                                        "ta",
                                        "te",
                                        "tg",
                                        "th",
                                        "ti",
                                        "tk",
                                        "tl",
                                        "tn",
                                        "to",
                                        "tr",
                                        "ts",
                                        "tt",
                                        "tw",
                                        "ty",
                                        "ug",
                                        "uk",
                                        "ur",
                                        "uz",
                                        "ve",
                                        "vi",
                                        "vo",
                                        "wa",
                                        "wo",
                                        "xh",
                                        "yi",
                                        "yo",
                                        "za",
                                        "zh",
                                        "zu"
                                      ]
                                    }
                                  ]
                                },
                                "custom_params": {
                                  "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string",
                                    "description": "A maximum of 7500 characters is permitted."
                                  },
                                  "example": {
                                    "param1": "value1"
                                  }
                                }
                              }
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "protection_rule": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Unique identifier for a resource",
                                      "type": "string",
                                      "minLength": 8,
                                      "maxLength": 8,
                                      "example": "Ny05CEfj",
                                      "pattern": "^[A-Za-z0-9]+$"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Resource type"
                                    }
                                  }
                                }
                              }
                            },
                            "status": {
                              "description": "Media upload status",
                              "type": "string",
                              "enum": [
                                "created",
                                "processing",
                                "ready",
                                "updating",
                                "failed"
                              ],
                              "example": "ready"
                            },
                            "media_type": {
                              "type": "string",
                              "enum": [
                                "audio",
                                "video"
                              ],
                              "example": "video"
                            },
                            "hosting_type": {
                              "description": "Indicates whether or not the media is hosted with JW Player or not",
                              "type": "string",
                              "enum": [
                                "external",
                                "hosted"
                              ],
                              "example": "hosted"
                            },
                            "mime_type": {
                              "type": "string",
                              "enum": [
                                "video/mp4",
                                "video/webm",
                                "video/flv",
                                "audio/aac",
                                "audio/mpeg",
                                "audio/ogg",
                                "application/vnd.apple.mpegurl",
                                "application/smil+xml",
                                "application/dash+xml",
                                "video/flash"
                              ]
                            },
                            "error_message": {
                              "description": "Message describing an issue uploading or processing the media",
                              "type": "string",
                              "example": "Something went wrong!"
                            },
                            "external_id": {
                              "type": "string",
                              "description": "Non-JWP ID for the media\nA maximum of 64 characters is permitted.",
                              "example": "myvideo123"
                            },
                            "duration": {
                              "description": "Length of the media in seconds",
                              "type": "number",
                              "example": 437
                            },
                            "trim_in_point": {
                              "type": "string",
                              "description": "Starting point to trim the video",
                              "example": "00:00:01"
                            },
                            "trim_out_point": {
                              "type": "string",
                              "description": "Ending point to trim the video",
                              "example": "00:01:00.123"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "upload_link": {
                          "description": "URL to be used for S3 uploads",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/": {
      "get": {
        "summary": "Get a media",
        "description": "Get a media",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "A maximum of 5000 characters is permitted.",
                              "example": "My Media Title"
                            },
                            "description": {
                              "type": "string",
                              "description": "A maximum of 25000 characters is permitted.",
                              "example": "My media description"
                            },
                            "author": {
                              "type": "string",
                              "description": "A maximum of 256 characters is permitted.",
                              "example": "Jane Doe"
                            },
                            "duration": {
                              "type": "number",
                              "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                            },
                            "permalink": {
                              "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                              "type": "string",
                              "example": "http://www.mysite.com"
                            },
                            "category": {
                              "description": "IAB category",
                              "type": "string",
                              "enum": [
                                "Automotive",
                                "Books and Literature",
                                "Business and Finance",
                                "Careers",
                                "Education",
                                "Events and Attractions",
                                "Family and Relationships",
                                "Fine Art",
                                "Food & Drink",
                                "Healthy Living",
                                "Hobbies & Interests",
                                "Home & Garden",
                                "Medical Health",
                                "Movies",
                                "Music and Audio",
                                "News and Politics",
                                "Personal Finance",
                                "Pets",
                                "Pop Culture",
                                "Real Estate",
                                "Religion & Spirituality",
                                "Science",
                                "Shopping",
                                "Sports",
                                "Style & Fashion",
                                "Technology & Computing",
                                "Television",
                                "Travel",
                                "Video Gaming"
                              ],
                              "example": "Automotive"
                            },
                            "publish_start_date": {
                              "description": "Start date and time in ISO 8601 format when media is available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "publish_end_date": {
                              "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "tags": {
                              "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test1",
                                "happy1",
                                "one",
                                "two",
                                "four"
                              ]
                            },
                            "language": {
                              "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                              "allOf": [
                                {
                                  "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                  "type": "string",
                                  "enum": [
                                    "aa",
                                    "ab",
                                    "ae",
                                    "af",
                                    "ak",
                                    "am",
                                    "an",
                                    "ar",
                                    "as",
                                    "av",
                                    "ay",
                                    "az",
                                    "ba",
                                    "be",
                                    "bg",
                                    "bh",
                                    "bi",
                                    "bm",
                                    "bn",
                                    "bo",
                                    "br",
                                    "bs",
                                    "ca",
                                    "ce",
                                    "ch",
                                    "co",
                                    "cr",
                                    "cs",
                                    "cu",
                                    "cv",
                                    "cy",
                                    "da",
                                    "de",
                                    "dv",
                                    "dz",
                                    "ee",
                                    "el",
                                    "en",
                                    "eo",
                                    "es",
                                    "et",
                                    "eu",
                                    "fa",
                                    "ff",
                                    "fi",
                                    "fj",
                                    "fo",
                                    "fr",
                                    "fy",
                                    "ga",
                                    "gd",
                                    "gl",
                                    "gn",
                                    "gu",
                                    "gv",
                                    "ha",
                                    "he",
                                    "hi",
                                    "ho",
                                    "hr",
                                    "ht",
                                    "hu",
                                    "hy",
                                    "hz",
                                    "ia",
                                    "id",
                                    "ie",
                                    "ig",
                                    "ii",
                                    "ik",
                                    "io",
                                    "is",
                                    "it",
                                    "iu",
                                    "ja",
                                    "jv",
                                    "ka",
                                    "kg",
                                    "ki",
                                    "kj",
                                    "kk",
                                    "kl",
                                    "km",
                                    "kn",
                                    "ko",
                                    "kr",
                                    "ks",
                                    "ku",
                                    "kv",
                                    "kw",
                                    "ky",
                                    "la",
                                    "lb",
                                    "lg",
                                    "li",
                                    "ln",
                                    "lo",
                                    "lt",
                                    "lu",
                                    "lv",
                                    "mg",
                                    "mh",
                                    "mi",
                                    "mk",
                                    "ml",
                                    "mn",
                                    "mr",
                                    "ms",
                                    "mt",
                                    "my",
                                    "na",
                                    "nb",
                                    "nd",
                                    "ne",
                                    "ng",
                                    "nl",
                                    "nn",
                                    false,
                                    "nr",
                                    "nv",
                                    "ny",
                                    "oc",
                                    "oj",
                                    "om",
                                    "or",
                                    "os",
                                    "pa",
                                    "pi",
                                    "pl",
                                    "ps",
                                    "pt",
                                    "qu",
                                    "rm",
                                    "rn",
                                    "ro",
                                    "ru",
                                    "rw",
                                    "sa",
                                    "sc",
                                    "sd",
                                    "se",
                                    "sg",
                                    "si",
                                    "sk",
                                    "sl",
                                    "sm",
                                    "sn",
                                    "so",
                                    "sq",
                                    "sr",
                                    "ss",
                                    "st",
                                    "su",
                                    "sv",
                                    "sw",
                                    "ta",
                                    "te",
                                    "tg",
                                    "th",
                                    "ti",
                                    "tk",
                                    "tl",
                                    "tn",
                                    "to",
                                    "tr",
                                    "ts",
                                    "tt",
                                    "tw",
                                    "ty",
                                    "ug",
                                    "uk",
                                    "ur",
                                    "uz",
                                    "ve",
                                    "vi",
                                    "vo",
                                    "wa",
                                    "wo",
                                    "xh",
                                    "yi",
                                    "yo",
                                    "za",
                                    "zh",
                                    "zu"
                                  ]
                                }
                              ]
                            },
                            "custom_params": {
                              "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string",
                                "description": "A maximum of 7500 characters is permitted."
                              },
                              "example": {
                                "param1": "value1"
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "protection_rule": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique identifier for a resource",
                                  "type": "string",
                                  "minLength": 8,
                                  "maxLength": 8,
                                  "example": "Ny05CEfj",
                                  "pattern": "^[A-Za-z0-9]+$"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Resource type"
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Media upload status",
                          "type": "string",
                          "enum": [
                            "created",
                            "processing",
                            "ready",
                            "updating",
                            "failed"
                          ],
                          "example": "ready"
                        },
                        "media_type": {
                          "type": "string",
                          "enum": [
                            "audio",
                            "video"
                          ],
                          "example": "video"
                        },
                        "hosting_type": {
                          "description": "Indicates whether or not the media is hosted with JW Player or not",
                          "type": "string",
                          "enum": [
                            "external",
                            "hosted"
                          ],
                          "example": "hosted"
                        },
                        "mime_type": {
                          "type": "string",
                          "enum": [
                            "video/mp4",
                            "video/webm",
                            "video/flv",
                            "audio/aac",
                            "audio/mpeg",
                            "audio/ogg",
                            "application/vnd.apple.mpegurl",
                            "application/smil+xml",
                            "application/dash+xml",
                            "video/flash"
                          ]
                        },
                        "error_message": {
                          "description": "Message describing an issue uploading or processing the media",
                          "type": "string",
                          "example": "Something went wrong!"
                        },
                        "external_id": {
                          "type": "string",
                          "description": "Non-JWP ID for the media\nA maximum of 64 characters is permitted.",
                          "example": "myvideo123"
                        },
                        "duration": {
                          "description": "Length of the media in seconds",
                          "type": "number",
                          "example": 437
                        },
                        "trim_in_point": {
                          "type": "string",
                          "description": "Starting point to trim the video",
                          "example": "00:00:01"
                        },
                        "trim_out_point": {
                          "type": "string",
                          "description": "Ending point to trim the video",
                          "example": "00:01:00.123"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a media",
        "description": "Update a media",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "A maximum of 5000 characters is permitted.",
                        "example": "My Media Title"
                      },
                      "description": {
                        "type": "string",
                        "description": "A maximum of 25000 characters is permitted.",
                        "example": "My media description"
                      },
                      "author": {
                        "type": "string",
                        "description": "A maximum of 256 characters is permitted.",
                        "example": "Jane Doe"
                      },
                      "duration": {
                        "type": "number",
                        "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                      },
                      "permalink": {
                        "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                        "type": "string",
                        "example": "http://www.mysite.com"
                      },
                      "category": {
                        "description": "IAB category",
                        "type": "string",
                        "enum": [
                          "Automotive",
                          "Books and Literature",
                          "Business and Finance",
                          "Careers",
                          "Education",
                          "Events and Attractions",
                          "Family and Relationships",
                          "Fine Art",
                          "Food & Drink",
                          "Healthy Living",
                          "Hobbies & Interests",
                          "Home & Garden",
                          "Medical Health",
                          "Movies",
                          "Music and Audio",
                          "News and Politics",
                          "Personal Finance",
                          "Pets",
                          "Pop Culture",
                          "Real Estate",
                          "Religion & Spirituality",
                          "Science",
                          "Shopping",
                          "Sports",
                          "Style & Fashion",
                          "Technology & Computing",
                          "Television",
                          "Travel",
                          "Video Gaming"
                        ],
                        "example": "Automotive"
                      },
                      "publish_start_date": {
                        "description": "Start date and time in ISO 8601 format when media is available for streaming",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-10-03T21:19:36.602019+00:00"
                      },
                      "publish_end_date": {
                        "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                        "type": "string",
                        "format": "date-time",
                        "example": "2018-10-03T21:19:36.602019+00:00"
                      },
                      "tags": {
                        "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "test1",
                          "happy1",
                          "one",
                          "two",
                          "four"
                        ]
                      },
                      "language": {
                        "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                        "allOf": [
                          {
                            "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                            "type": "string",
                            "enum": [
                              "aa",
                              "ab",
                              "ae",
                              "af",
                              "ak",
                              "am",
                              "an",
                              "ar",
                              "as",
                              "av",
                              "ay",
                              "az",
                              "ba",
                              "be",
                              "bg",
                              "bh",
                              "bi",
                              "bm",
                              "bn",
                              "bo",
                              "br",
                              "bs",
                              "ca",
                              "ce",
                              "ch",
                              "co",
                              "cr",
                              "cs",
                              "cu",
                              "cv",
                              "cy",
                              "da",
                              "de",
                              "dv",
                              "dz",
                              "ee",
                              "el",
                              "en",
                              "eo",
                              "es",
                              "et",
                              "eu",
                              "fa",
                              "ff",
                              "fi",
                              "fj",
                              "fo",
                              "fr",
                              "fy",
                              "ga",
                              "gd",
                              "gl",
                              "gn",
                              "gu",
                              "gv",
                              "ha",
                              "he",
                              "hi",
                              "ho",
                              "hr",
                              "ht",
                              "hu",
                              "hy",
                              "hz",
                              "ia",
                              "id",
                              "ie",
                              "ig",
                              "ii",
                              "ik",
                              "io",
                              "is",
                              "it",
                              "iu",
                              "ja",
                              "jv",
                              "ka",
                              "kg",
                              "ki",
                              "kj",
                              "kk",
                              "kl",
                              "km",
                              "kn",
                              "ko",
                              "kr",
                              "ks",
                              "ku",
                              "kv",
                              "kw",
                              "ky",
                              "la",
                              "lb",
                              "lg",
                              "li",
                              "ln",
                              "lo",
                              "lt",
                              "lu",
                              "lv",
                              "mg",
                              "mh",
                              "mi",
                              "mk",
                              "ml",
                              "mn",
                              "mr",
                              "ms",
                              "mt",
                              "my",
                              "na",
                              "nb",
                              "nd",
                              "ne",
                              "ng",
                              "nl",
                              "nn",
                              false,
                              "nr",
                              "nv",
                              "ny",
                              "oc",
                              "oj",
                              "om",
                              "or",
                              "os",
                              "pa",
                              "pi",
                              "pl",
                              "ps",
                              "pt",
                              "qu",
                              "rm",
                              "rn",
                              "ro",
                              "ru",
                              "rw",
                              "sa",
                              "sc",
                              "sd",
                              "se",
                              "sg",
                              "si",
                              "sk",
                              "sl",
                              "sm",
                              "sn",
                              "so",
                              "sq",
                              "sr",
                              "ss",
                              "st",
                              "su",
                              "sv",
                              "sw",
                              "ta",
                              "te",
                              "tg",
                              "th",
                              "ti",
                              "tk",
                              "tl",
                              "tn",
                              "to",
                              "tr",
                              "ts",
                              "tt",
                              "tw",
                              "ty",
                              "ug",
                              "uk",
                              "ur",
                              "uz",
                              "ve",
                              "vi",
                              "vo",
                              "wa",
                              "wo",
                              "xh",
                              "yi",
                              "yo",
                              "za",
                              "zh",
                              "zu"
                            ]
                          }
                        ]
                      },
                      "custom_params": {
                        "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "A maximum of 7500 characters is permitted."
                        },
                        "example": {
                          "param1": "value1"
                        }
                      }
                    }
                  },
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "protection_rule": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for a resource",
                            "type": "string",
                            "minLength": 8,
                            "maxLength": 8,
                            "example": "Ny05CEfj",
                            "pattern": "^[A-Za-z0-9]+$"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resource successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "A maximum of 5000 characters is permitted.",
                              "example": "My Media Title"
                            },
                            "description": {
                              "type": "string",
                              "description": "A maximum of 25000 characters is permitted.",
                              "example": "My media description"
                            },
                            "author": {
                              "type": "string",
                              "description": "A maximum of 256 characters is permitted.",
                              "example": "Jane Doe"
                            },
                            "duration": {
                              "type": "number",
                              "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                            },
                            "permalink": {
                              "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                              "type": "string",
                              "example": "http://www.mysite.com"
                            },
                            "category": {
                              "description": "IAB category",
                              "type": "string",
                              "enum": [
                                "Automotive",
                                "Books and Literature",
                                "Business and Finance",
                                "Careers",
                                "Education",
                                "Events and Attractions",
                                "Family and Relationships",
                                "Fine Art",
                                "Food & Drink",
                                "Healthy Living",
                                "Hobbies & Interests",
                                "Home & Garden",
                                "Medical Health",
                                "Movies",
                                "Music and Audio",
                                "News and Politics",
                                "Personal Finance",
                                "Pets",
                                "Pop Culture",
                                "Real Estate",
                                "Religion & Spirituality",
                                "Science",
                                "Shopping",
                                "Sports",
                                "Style & Fashion",
                                "Technology & Computing",
                                "Television",
                                "Travel",
                                "Video Gaming"
                              ],
                              "example": "Automotive"
                            },
                            "publish_start_date": {
                              "description": "Start date and time in ISO 8601 format when media is available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "publish_end_date": {
                              "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "tags": {
                              "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test1",
                                "happy1",
                                "one",
                                "two",
                                "four"
                              ]
                            },
                            "language": {
                              "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                              "allOf": [
                                {
                                  "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                  "type": "string",
                                  "enum": [
                                    "aa",
                                    "ab",
                                    "ae",
                                    "af",
                                    "ak",
                                    "am",
                                    "an",
                                    "ar",
                                    "as",
                                    "av",
                                    "ay",
                                    "az",
                                    "ba",
                                    "be",
                                    "bg",
                                    "bh",
                                    "bi",
                                    "bm",
                                    "bn",
                                    "bo",
                                    "br",
                                    "bs",
                                    "ca",
                                    "ce",
                                    "ch",
                                    "co",
                                    "cr",
                                    "cs",
                                    "cu",
                                    "cv",
                                    "cy",
                                    "da",
                                    "de",
                                    "dv",
                                    "dz",
                                    "ee",
                                    "el",
                                    "en",
                                    "eo",
                                    "es",
                                    "et",
                                    "eu",
                                    "fa",
                                    "ff",
                                    "fi",
                                    "fj",
                                    "fo",
                                    "fr",
                                    "fy",
                                    "ga",
                                    "gd",
                                    "gl",
                                    "gn",
                                    "gu",
                                    "gv",
                                    "ha",
                                    "he",
                                    "hi",
                                    "ho",
                                    "hr",
                                    "ht",
                                    "hu",
                                    "hy",
                                    "hz",
                                    "ia",
                                    "id",
                                    "ie",
                                    "ig",
                                    "ii",
                                    "ik",
                                    "io",
                                    "is",
                                    "it",
                                    "iu",
                                    "ja",
                                    "jv",
                                    "ka",
                                    "kg",
                                    "ki",
                                    "kj",
                                    "kk",
                                    "kl",
                                    "km",
                                    "kn",
                                    "ko",
                                    "kr",
                                    "ks",
                                    "ku",
                                    "kv",
                                    "kw",
                                    "ky",
                                    "la",
                                    "lb",
                                    "lg",
                                    "li",
                                    "ln",
                                    "lo",
                                    "lt",
                                    "lu",
                                    "lv",
                                    "mg",
                                    "mh",
                                    "mi",
                                    "mk",
                                    "ml",
                                    "mn",
                                    "mr",
                                    "ms",
                                    "mt",
                                    "my",
                                    "na",
                                    "nb",
                                    "nd",
                                    "ne",
                                    "ng",
                                    "nl",
                                    "nn",
                                    false,
                                    "nr",
                                    "nv",
                                    "ny",
                                    "oc",
                                    "oj",
                                    "om",
                                    "or",
                                    "os",
                                    "pa",
                                    "pi",
                                    "pl",
                                    "ps",
                                    "pt",
                                    "qu",
                                    "rm",
                                    "rn",
                                    "ro",
                                    "ru",
                                    "rw",
                                    "sa",
                                    "sc",
                                    "sd",
                                    "se",
                                    "sg",
                                    "si",
                                    "sk",
                                    "sl",
                                    "sm",
                                    "sn",
                                    "so",
                                    "sq",
                                    "sr",
                                    "ss",
                                    "st",
                                    "su",
                                    "sv",
                                    "sw",
                                    "ta",
                                    "te",
                                    "tg",
                                    "th",
                                    "ti",
                                    "tk",
                                    "tl",
                                    "tn",
                                    "to",
                                    "tr",
                                    "ts",
                                    "tt",
                                    "tw",
                                    "ty",
                                    "ug",
                                    "uk",
                                    "ur",
                                    "uz",
                                    "ve",
                                    "vi",
                                    "vo",
                                    "wa",
                                    "wo",
                                    "xh",
                                    "yi",
                                    "yo",
                                    "za",
                                    "zh",
                                    "zu"
                                  ]
                                }
                              ]
                            },
                            "custom_params": {
                              "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string",
                                "description": "A maximum of 7500 characters is permitted."
                              },
                              "example": {
                                "param1": "value1"
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "protection_rule": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique identifier for a resource",
                                  "type": "string",
                                  "minLength": 8,
                                  "maxLength": 8,
                                  "example": "Ny05CEfj",
                                  "pattern": "^[A-Za-z0-9]+$"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Resource type"
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Media upload status",
                          "type": "string",
                          "enum": [
                            "created",
                            "processing",
                            "ready",
                            "updating",
                            "failed"
                          ],
                          "example": "ready"
                        },
                        "media_type": {
                          "type": "string",
                          "enum": [
                            "audio",
                            "video"
                          ],
                          "example": "video"
                        },
                        "hosting_type": {
                          "description": "Indicates whether or not the media is hosted with JW Player or not",
                          "type": "string",
                          "enum": [
                            "external",
                            "hosted"
                          ],
                          "example": "hosted"
                        },
                        "mime_type": {
                          "type": "string",
                          "enum": [
                            "video/mp4",
                            "video/webm",
                            "video/flv",
                            "audio/aac",
                            "audio/mpeg",
                            "audio/ogg",
                            "application/vnd.apple.mpegurl",
                            "application/smil+xml",
                            "application/dash+xml",
                            "video/flash"
                          ]
                        },
                        "error_message": {
                          "description": "Message describing an issue uploading or processing the media",
                          "type": "string",
                          "example": "Something went wrong!"
                        },
                        "external_id": {
                          "type": "string",
                          "description": "Non-JWP ID for the media\nA maximum of 64 characters is permitted.",
                          "example": "myvideo123"
                        },
                        "duration": {
                          "description": "Length of the media in seconds",
                          "type": "number",
                          "example": 437
                        },
                        "trim_in_point": {
                          "type": "string",
                          "description": "Starting point to trim the video",
                          "example": "00:00:01"
                        },
                        "trim_out_point": {
                          "type": "string",
                          "description": "Ending point to trim the video",
                          "example": "00:01:00.123"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a media",
        "description": "Deletes the media for the given ID",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/reupload/": {
      "put": {
        "summary": "Reupload a media",
        "description": "Initiates a reupload of a media allowing the file or URL to be replaced.  Reuploads might affect audio and text tracks associated with a media. [Learn more here](https://docs.jwplayer.com/platform/docs/vdh-replace-or-update-an-existing-upload)",
        "tags": [
          "media"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "upload": {
                    "type": "object",
                    "description": "Metadata describing the upload method and information required to process the upload",
                    "properties": {
                      "method": {
                        "description": "Upload method\n\n**Possible values**:\n- `direct`: Can upload media files up to **5GB** and on a local machine\n\n- `external`: Use for registering **self-hosted** content with your JW Player account\n\n- `fetch`: Can upload media files up to **100GB** and hosted on another platform (**only** if using the v2 Management API)\n\n- `multipart`: Can upload media files up to **100GB** and on a local machine (**only** if using the v2 Management API)\n",
                        "type": "string",
                        "enum": [
                          "fetch",
                          "direct",
                          "multipart",
                          "external"
                        ]
                      },
                      "mime_type": {
                        "description": "MIME type for the uploaded media, required for the `external` upload method",
                        "type": "string",
                        "enum": [
                          "video/mp4",
                          "video/webm",
                          "video/flv",
                          "audio/aac",
                          "audio/mpeg",
                          "audio/ogg",
                          "application/vnd.apple.mpegurl",
                          "application/smil+xml",
                          "application/dash+xml",
                          "video/flash"
                        ]
                      },
                      "source_url": {
                        "description": "URL of the external media, required for the `external` upload method",
                        "type": "string"
                      },
                      "download_url": {
                        "description": "URL of the media to fetch\n\nThis is **required** for the `fetch` upload method\n"
                      },
                      "trim_in_point": {
                        "type": "string",
                        "description": "Starting point to trim the video, not applicable to the `external` upload method",
                        "example": "00:00:01"
                      },
                      "trim_out_point": {
                        "type": "string",
                        "description": "Ending point to trim the video, not applicable to the `external` upload method",
                        "example": "00:01:00.123"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Media reupload successfully initiated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "A maximum of 5000 characters is permitted.",
                              "example": "My Media Title"
                            },
                            "description": {
                              "type": "string",
                              "description": "A maximum of 25000 characters is permitted.",
                              "example": "My media description"
                            },
                            "author": {
                              "type": "string",
                              "description": "A maximum of 256 characters is permitted.",
                              "example": "Jane Doe"
                            },
                            "duration": {
                              "type": "number",
                              "description": "Length of the media in seconds\nThis can only be defined manually for externally hosted media. The `duration` is set automatically for hosted media."
                            },
                            "permalink": {
                              "description": "URL of the page where this media is published\nA maximum of 2048 characters is permitted.",
                              "type": "string",
                              "example": "http://www.mysite.com"
                            },
                            "category": {
                              "description": "IAB category",
                              "type": "string",
                              "enum": [
                                "Automotive",
                                "Books and Literature",
                                "Business and Finance",
                                "Careers",
                                "Education",
                                "Events and Attractions",
                                "Family and Relationships",
                                "Fine Art",
                                "Food & Drink",
                                "Healthy Living",
                                "Hobbies & Interests",
                                "Home & Garden",
                                "Medical Health",
                                "Movies",
                                "Music and Audio",
                                "News and Politics",
                                "Personal Finance",
                                "Pets",
                                "Pop Culture",
                                "Real Estate",
                                "Religion & Spirituality",
                                "Science",
                                "Shopping",
                                "Sports",
                                "Style & Fashion",
                                "Technology & Computing",
                                "Television",
                                "Travel",
                                "Video Gaming"
                              ],
                              "example": "Automotive"
                            },
                            "publish_start_date": {
                              "description": "Start date and time in ISO 8601 format when media is available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "publish_end_date": {
                              "description": "End date and time in ISO 8601 format when media is no longer available for streaming",
                              "type": "string",
                              "format": "date-time",
                              "example": "2018-10-03T21:19:36.602019+00:00"
                            },
                            "tags": {
                              "description": "User-generated labels used to classify a video\n\nTags are case sensitive, and trailing whitespace is removed.\n\nWhen defining `tags`, include all the `tags` that should be associated with the target resource.\n\nWhen updating existing `tags`, include those already in use. Any `tags` not included within the updated `tags` in the request body will be deleted.\n",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test1",
                                "happy1",
                                "one",
                                "two",
                                "four"
                              ]
                            },
                            "language": {
                              "description": "Two-letter [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php) language code for the media\nThis is used to index the media by language, to provide relevant playlist recommendations.",
                              "allOf": [
                                {
                                  "description": "List of language codes to define a language. Uses ISO-639-1 language codes.",
                                  "type": "string",
                                  "enum": [
                                    "aa",
                                    "ab",
                                    "ae",
                                    "af",
                                    "ak",
                                    "am",
                                    "an",
                                    "ar",
                                    "as",
                                    "av",
                                    "ay",
                                    "az",
                                    "ba",
                                    "be",
                                    "bg",
                                    "bh",
                                    "bi",
                                    "bm",
                                    "bn",
                                    "bo",
                                    "br",
                                    "bs",
                                    "ca",
                                    "ce",
                                    "ch",
                                    "co",
                                    "cr",
                                    "cs",
                                    "cu",
                                    "cv",
                                    "cy",
                                    "da",
                                    "de",
                                    "dv",
                                    "dz",
                                    "ee",
                                    "el",
                                    "en",
                                    "eo",
                                    "es",
                                    "et",
                                    "eu",
                                    "fa",
                                    "ff",
                                    "fi",
                                    "fj",
                                    "fo",
                                    "fr",
                                    "fy",
                                    "ga",
                                    "gd",
                                    "gl",
                                    "gn",
                                    "gu",
                                    "gv",
                                    "ha",
                                    "he",
                                    "hi",
                                    "ho",
                                    "hr",
                                    "ht",
                                    "hu",
                                    "hy",
                                    "hz",
                                    "ia",
                                    "id",
                                    "ie",
                                    "ig",
                                    "ii",
                                    "ik",
                                    "io",
                                    "is",
                                    "it",
                                    "iu",
                                    "ja",
                                    "jv",
                                    "ka",
                                    "kg",
                                    "ki",
                                    "kj",
                                    "kk",
                                    "kl",
                                    "km",
                                    "kn",
                                    "ko",
                                    "kr",
                                    "ks",
                                    "ku",
                                    "kv",
                                    "kw",
                                    "ky",
                                    "la",
                                    "lb",
                                    "lg",
                                    "li",
                                    "ln",
                                    "lo",
                                    "lt",
                                    "lu",
                                    "lv",
                                    "mg",
                                    "mh",
                                    "mi",
                                    "mk",
                                    "ml",
                                    "mn",
                                    "mr",
                                    "ms",
                                    "mt",
                                    "my",
                                    "na",
                                    "nb",
                                    "nd",
                                    "ne",
                                    "ng",
                                    "nl",
                                    "nn",
                                    false,
                                    "nr",
                                    "nv",
                                    "ny",
                                    "oc",
                                    "oj",
                                    "om",
                                    "or",
                                    "os",
                                    "pa",
                                    "pi",
                                    "pl",
                                    "ps",
                                    "pt",
                                    "qu",
                                    "rm",
                                    "rn",
                                    "ro",
                                    "ru",
                                    "rw",
                                    "sa",
                                    "sc",
                                    "sd",
                                    "se",
                                    "sg",
                                    "si",
                                    "sk",
                                    "sl",
                                    "sm",
                                    "sn",
                                    "so",
                                    "sq",
                                    "sr",
                                    "ss",
                                    "st",
                                    "su",
                                    "sv",
                                    "sw",
                                    "ta",
                                    "te",
                                    "tg",
                                    "th",
                                    "ti",
                                    "tk",
                                    "tl",
                                    "tn",
                                    "to",
                                    "tr",
                                    "ts",
                                    "tt",
                                    "tw",
                                    "ty",
                                    "ug",
                                    "uk",
                                    "ur",
                                    "uz",
                                    "ve",
                                    "vi",
                                    "vo",
                                    "wa",
                                    "wo",
                                    "xh",
                                    "yi",
                                    "yo",
                                    "za",
                                    "zh",
                                    "zu"
                                  ]
                                }
                              ]
                            },
                            "custom_params": {
                              "description": "User-generated key-value pairs\n\nWhen defining `custom_params`, include all custom parameters that should be associated with the target resource.\n\nWhen updating existing `custom_params`, include all `custom_params` keys with their updated values. Any `custom_params` key-value pair not included within the updated `custom_params` in the request body is [deleted](doc:stream-faq-how-can-i-delete-a-custom-parameter).\n",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string",
                                "description": "A maximum of 7500 characters is permitted."
                              },
                              "example": {
                                "param1": "value1"
                              }
                            }
                          }
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "protection_rule": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique identifier for a resource",
                                  "type": "string",
                                  "minLength": 8,
                                  "maxLength": 8,
                                  "example": "Ny05CEfj",
                                  "pattern": "^[A-Za-z0-9]+$"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Resource type"
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Media upload status",
                          "type": "string",
                          "enum": [
                            "created",
                            "processing",
                            "ready",
                            "updating",
                            "failed"
                          ],
                          "example": "ready"
                        },
                        "media_type": {
                          "type": "string",
                          "enum": [
                            "audio",
                            "video"
                          ],
                          "example": "video"
                        },
                        "hosting_type": {
                          "description": "Indicates whether or not the media is hosted with JW Player or not",
                          "type": "string",
                          "enum": [
                            "external",
                            "hosted"
                          ],
                          "example": "hosted"
                        },
                        "mime_type": {
                          "type": "string",
                          "enum": [
                            "video/mp4",
                            "video/webm",
                            "video/flv",
                            "audio/aac",
                            "audio/mpeg",
                            "audio/ogg",
                            "application/vnd.apple.mpegurl",
                            "application/smil+xml",
                            "application/dash+xml",
                            "video/flash"
                          ]
                        },
                        "error_message": {
                          "description": "Message describing an issue uploading or processing the media",
                          "type": "string",
                          "example": "Something went wrong!"
                        },
                        "external_id": {
                          "type": "string",
                          "description": "Non-JWP ID for the media\nA maximum of 64 characters is permitted.",
                          "example": "myvideo123"
                        },
                        "duration": {
                          "description": "Length of the media in seconds",
                          "type": "number",
                          "example": 437
                        },
                        "trim_in_point": {
                          "type": "string",
                          "description": "Starting point to trim the video",
                          "example": "00:00:01"
                        },
                        "trim_out_point": {
                          "type": "string",
                          "description": "Ending point to trim the video",
                          "example": "00:01:00.123"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/media_renditions/": {
      "get": {
        "summary": "List media renditions",
        "tags": [
          "media renditions"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "page",
            "description": "Sets the page number for pagination. First page is `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_length",
            "description": "Sets the page length (number of items you get in the response) for pagination\n\nIf `page_length` is not specified, the default value will be set.\n\nDefault: `10`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "q",
            "description": "Allows for [querying results](https://developer.jwplayer.com/jwplayer/reference/building-a-request#query-parameter-q)\n\nExample: `id:+zKqzcasd`\n\nMedia renditions can be queried by the following attributes:\n - `id`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "description": "Allows for sorting results\n\nExample: `sort=created:dsc`\n\nSort order can be one of `asc`, `dsc`\n\nMedia renditions can be sorted by the following attributes:\n  - `created`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created:dsc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Response for retrieving a list of media renditions of a media",
                      "properties": {
                        "media_renditions": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "description": "Resource for a media's renditions",
                                "additionalProperties": false,
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "properties": {
                                      "media_rendition_template": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "description": "Unique identifier for a resource",
                                            "type": "string",
                                            "minLength": 8,
                                            "maxLength": 8,
                                            "example": "Ny05CEfj",
                                            "pattern": "^[A-Za-z0-9]+$"
                                          },
                                          "type": {
                                            "type": "string",
                                            "description": "Resource type"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "height": {
                                    "type": "integer",
                                    "example": 480
                                  },
                                  "width": {
                                    "type": "integer",
                                    "example": 720
                                  },
                                  "format": {
                                    "type": "string",
                                    "description": "Extension format of the rendition"
                                  },
                                  "delivery_url": {
                                    "type": "string",
                                    "description": "URL to access the media rendition\nThis URL is only returned when the media rendition status is `ready`."
                                  },
                                  "error_message": {
                                    "type": "string",
                                    "description": "A human-readable error message for describing failures"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "ready",
                                    "enum": [
                                      "failed",
                                      "processing",
                                      "ready"
                                    ]
                                  },
                                  "filesize": {
                                    "type": "integer",
                                    "description": "Size of the media rendition, in bytes"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a media rendition",
        "tags": [
          "media renditions"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "description": "Request body for creating a new media rendition. For more information about creating media renditions and templates, please contact [JW Player support](https://support.jwplayer.com/submit-support-case).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "object",
                    "properties": {
                      "media_rendition_template": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for a resource",
                            "type": "string",
                            "minLength": 8,
                            "maxLength": 8,
                            "example": "Ny05CEfj",
                            "pattern": "^[A-Za-z0-9]+$"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Resource for a media's renditions",
                      "additionalProperties": false,
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "additionalProperties": false
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "media_rendition_template": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique identifier for a resource",
                                  "type": "string",
                                  "minLength": 8,
                                  "maxLength": 8,
                                  "example": "Ny05CEfj",
                                  "pattern": "^[A-Za-z0-9]+$"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Resource type"
                                }
                              }
                            }
                          }
                        },
                        "height": {
                          "type": "integer",
                          "example": 480
                        },
                        "width": {
                          "type": "integer",
                          "example": 720
                        },
                        "format": {
                          "type": "string",
                          "description": "Extension format of the rendition"
                        },
                        "delivery_url": {
                          "type": "string",
                          "description": "URL to access the media rendition\nThis URL is only returned when the media rendition status is `ready`."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "A human-readable error message for describing failures"
                        },
                        "status": {
                          "type": "string",
                          "example": "ready",
                          "enum": [
                            "failed",
                            "processing",
                            "ready"
                          ]
                        },
                        "filesize": {
                          "type": "integer",
                          "description": "Size of the media rendition, in bytes"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Request conflicts with state of target resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/media_renditions/{rendition_id}/": {
      "get": {
        "summary": "Get a media rendition",
        "tags": [
          "media renditions"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "rendition_id",
            "description": "ID of a single video source or audio source of a media asset",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Resource for a media's renditions",
                      "additionalProperties": false,
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "additionalProperties": false
                        },
                        "relationships": {
                          "type": "object",
                          "properties": {
                            "media_rendition_template": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "Unique identifier for a resource",
                                  "type": "string",
                                  "minLength": 8,
                                  "maxLength": 8,
                                  "example": "Ny05CEfj",
                                  "pattern": "^[A-Za-z0-9]+$"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "Resource type"
                                }
                              }
                            }
                          }
                        },
                        "height": {
                          "type": "integer",
                          "example": 480
                        },
                        "width": {
                          "type": "integer",
                          "example": 720
                        },
                        "format": {
                          "type": "string",
                          "description": "Extension format of the rendition"
                        },
                        "delivery_url": {
                          "type": "string",
                          "description": "URL to access the media rendition\nThis URL is only returned when the media rendition status is `ready`."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "A human-readable error message for describing failures"
                        },
                        "status": {
                          "type": "string",
                          "example": "ready",
                          "enum": [
                            "failed",
                            "processing",
                            "ready"
                          ]
                        },
                        "filesize": {
                          "type": "integer",
                          "description": "Size of the media rendition, in bytes"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a media rendition",
        "tags": [
          "media renditions"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "rendition_id",
            "description": "ID of a single video source or audio source of a media asset",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/originals/": {
      "get": {
        "summary": "List originals",
        "description": "Retrieves a list of resources that represent the uploaded files that make up a hosted media\n\nThese may be primary (for example a video file or the main audio file) or secondary (for example an additional audio track).\n",
        "tags": [
          "originals"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "page",
            "description": "Sets the page number for pagination. First page is `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_length",
            "description": "Sets the page length (number of items you get in the response) for pagination\n\nIf `page_length` is not specified, the default value will be set.\n\nDefault: `10`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Original successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "originals": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Original status",
                                    "type": "string",
                                    "enum": [
                                      "created",
                                      "failed",
                                      "processing",
                                      "ready",
                                      "updating"
                                    ]
                                  },
                                  "error_message": {
                                    "description": "Human-readable message explaining an issue uploading or processing an original\n\nThis property is only displayed when `\"status\": \"failed\"`.\n",
                                    "type": "string"
                                  },
                                  "size": {
                                    "description": "Size of the original in bytes",
                                    "type": "string"
                                  },
                                  "container_format": {
                                    "description": "File format containing the media compressed by means of standardized audio/video codecs",
                                    "type": "string",
                                    "example": "mp4"
                                  },
                                  "md5": {
                                    "description": "MD5 hash of the asset, stored as 32-character hexadecimal string",
                                    "type": "string"
                                  },
                                  "original_type": {
                                    "description": "Identifies if the uploaded file is a video file (`primary`) or an alternate audio track file (`secondary`)\n",
                                    "enum": [
                                      "primary",
                                      "secondary"
                                    ]
                                  },
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the original and fallback name of associated audio tracks.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track and is the fallback type of associated audio tracks.\n\n**Possible values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n\n- `commentary`: Commentary to accompany the video\n\n- `language`: Alternate language option than the one already present in the video\n\n- `music`: Alternate music selection\n\n- `other`: Anything else\n",
                                        "enum": [
                                          "audio-description",
                                          "commentary",
                                          "language",
                                          "music",
                                          "other"
                                        ]
                                      },
                                      "language": {
                                        "description": "Language dialect of the original resource and fallback language of associated audio tracks.\nWhen a `name` is not provided, `language` is used as the audio label\nSet to `English` as default on non-music type resources",
                                        "type": "string"
                                      },
                                      "language_code": {
                                        "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the original and fallback language code of associated audio tracks.\n\n This is set to `en` as default for non-music type resources",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an original",
        "description": "Creates an original resource for an additional file for the media, such as [alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks)\n",
        "tags": [
          "originals"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "upload": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "enum": [
                          "direct",
                          "multipart",
                          "fetch"
                        ]
                      },
                      "mime_type": {
                        "description": "MIME type for the uploaded media",
                        "type": "string"
                      },
                      "download_url": {
                        "description": "URL of the media to fetch, required for the `fetch` upload method",
                        "type": "string"
                      }
                    }
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the original and fallback name of associated audio tracks.",
                        "type": "string"
                      },
                      "type": {
                        "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track and is the fallback type of associated audio tracks.\n\n**Possible values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n\n- `commentary`: Commentary to accompany the video\n\n- `language`: Alternate language option than the one already present in the video\n\n- `music`: Alternate music selection\n\n- `other`: Anything else\n",
                        "enum": [
                          "audio-description",
                          "commentary",
                          "language",
                          "music",
                          "other"
                        ]
                      },
                      "language": {
                        "description": "Language dialect of the original resource and fallback language of associated audio tracks.\nWhen a `name` is not provided, `language` is used as the audio label\nSet to `English` as default on non-music type resources",
                        "type": "string"
                      },
                      "language_code": {
                        "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the original and fallback language code of associated audio tracks.\n\n This is set to `en` as default for non-music type resources",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Object successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "schema": {
                              "type": "string",
                              "example": "https://schema.jwplayer.com/types/thumbnail.json"
                            },
                            "id": {
                              "description": "Unique identifier for a resource",
                              "type": "string",
                              "minLength": 8,
                              "maxLength": 8,
                              "example": "Ny05CEfj",
                              "pattern": "^[A-Za-z0-9]+$"
                            },
                            "created": {
                              "type": "string",
                              "description": "Date and time at which the resource was created",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "last_modified": {
                              "type": "string",
                              "description": "Date and time at which the resource was most recently modified",
                              "example": "2019-09-25T15:29:11.042095+00:00"
                            },
                            "type": {
                              "type": "string",
                              "description": "Name of the type of resource."
                            },
                            "relationships": {
                              "type": "object",
                              "description": "Ancilliary resources associated to the primary resource being read"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Original status",
                              "type": "string",
                              "enum": [
                                "created",
                                "failed",
                                "processing",
                                "ready",
                                "updating"
                              ]
                            },
                            "error_message": {
                              "description": "Human-readable message explaining an issue uploading or processing an original\n\nThis property is only displayed when `\"status\": \"failed\"`.\n",
                              "type": "string"
                            },
                            "size": {
                              "description": "Size of the original in bytes",
                              "type": "string"
                            },
                            "container_format": {
                              "description": "File format containing the media compressed by means of standardized audio/video codecs",
                              "type": "string",
                              "example": "mp4"
                            },
                            "md5": {
                              "description": "MD5 hash of the asset, stored as 32-character hexadecimal string",
                              "type": "string"
                            },
                            "original_type": {
                              "description": "Identifies if the uploaded file is a video file (`primary`) or an alternate audio track file (`secondary`)\n",
                              "enum": [
                                "primary",
                                "secondary"
                              ]
                            },
                            "metadata": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the original and fallback name of associated audio tracks.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track and is the fallback type of associated audio tracks.\n\n**Possible values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n\n- `commentary`: Commentary to accompany the video\n\n- `language`: Alternate language option than the one already present in the video\n\n- `music`: Alternate music selection\n\n- `other`: Anything else\n",
                                  "enum": [
                                    "audio-description",
                                    "commentary",
                                    "language",
                                    "music",
                                    "other"
                                  ]
                                },
                                "language": {
                                  "description": "Language dialect of the original resource and fallback language of associated audio tracks.\nWhen a `name` is not provided, `language` is used as the audio label\nSet to `English` as default on non-music type resources",
                                  "type": "string"
                                },
                                "language_code": {
                                  "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the original and fallback language code of associated audio tracks.\n\n This is set to `en` as default for non-music type resources",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "upload_token": {
                              "type": "string",
                              "description": "Authentication used for multipart upload endpoints\n\nOnly returned when `upload.method` is `multipart`\n"
                            },
                            "upload_id": {
                              "type": "string",
                              "description": "Unique identifier for the upload\n\nOnly returned when `\"upload.method\": \"multipart\"`.\n"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "upload_link": {
                              "type": "string",
                              "description": "URL to be used for S3 uploads\n\nOnly returned when `upload.method` is `direct`\n"
                            }
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "412": {
            "description": "Pre-condition Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/originals/{original_id}/": {
      "get": {
        "summary": "Get an original",
        "description": "Retrieves an original resource, which represents the primary or secondary files of a hosted media, by ID\n",
        "tags": [
          "originals"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Original successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Original status",
                          "type": "string",
                          "enum": [
                            "created",
                            "failed",
                            "processing",
                            "ready",
                            "updating"
                          ]
                        },
                        "error_message": {
                          "description": "Human-readable message explaining an issue uploading or processing an original\n\nThis property is only displayed when `\"status\": \"failed\"`.\n",
                          "type": "string"
                        },
                        "size": {
                          "description": "Size of the original in bytes",
                          "type": "string"
                        },
                        "container_format": {
                          "description": "File format containing the media compressed by means of standardized audio/video codecs",
                          "type": "string",
                          "example": "mp4"
                        },
                        "md5": {
                          "description": "MD5 hash of the asset, stored as 32-character hexadecimal string",
                          "type": "string"
                        },
                        "original_type": {
                          "description": "Identifies if the uploaded file is a video file (`primary`) or an alternate audio track file (`secondary`)\n",
                          "enum": [
                            "primary",
                            "secondary"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the original and fallback name of associated audio tracks.",
                              "type": "string"
                            },
                            "type": {
                              "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track and is the fallback type of associated audio tracks.\n\n**Possible values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n\n- `commentary`: Commentary to accompany the video\n\n- `language`: Alternate language option than the one already present in the video\n\n- `music`: Alternate music selection\n\n- `other`: Anything else\n",
                              "enum": [
                                "audio-description",
                                "commentary",
                                "language",
                                "music",
                                "other"
                              ]
                            },
                            "language": {
                              "description": "Language dialect of the original resource and fallback language of associated audio tracks.\nWhen a `name` is not provided, `language` is used as the audio label\nSet to `English` as default on non-music type resources",
                              "type": "string"
                            },
                            "language_code": {
                              "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the original and fallback language code of associated audio tracks.\n\n This is set to `en` as default for non-music type resources",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an original",
        "description": "Deletes an original resource ID\n\nTracks corresponding to a deleted original will no longer be included for playback. \n\nOnly secondary originals can be deleted. Secondary originals are used for [alternate audio tracks](https://docs.jwplayer.com/platform/docs/vdh-add-alternate-audio-tracks) and have `original_type` set to `secondary`.\n",
        "tags": [
          "originals"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/originals/{original_id}/audio_tracks/": {
      "get": {
        "summary": "List audio tracks",
        "description": "Retrieves a list of audio tracks associated with the original\n",
        "tags": [
          "audio tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "page",
            "description": "Sets the page number for pagination. First page is `1`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_length",
            "description": "Sets the page length (number of items you get in the response) for pagination\n\nIf `page_length` is not specified, the default value will be set.\n\nDefault: `10`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "originals": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Name of the audio track",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track\n\n**Possible Values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n- `commentary`: Commentary to accompany the video\n- `language`: Alternate language option than the one already present in the video\n- `music`: Alternate music selection\n- `other`: Anything else\n",
                                        "enum": [
                                          "audio-description",
                                          "commentary",
                                          "language",
                                          "music",
                                          "other"
                                        ]
                                      },
                                      "language": {
                                        "description": "Language dialect of the audio track When a `name` is not provided, `language` is used as the audio label",
                                        "type": "string"
                                      },
                                      "language_code": {
                                        "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the audio track",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/originals/{original_id}/audio_tracks/{audio_track_id}/": {
      "get": {
        "summary": "Get an audio track",
        "description": "Retrieves the details of a specific audio track\n",
        "tags": [
          "audio tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "audio_track_id",
            "description": "Unique identifier for an audio track resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the audio track",
                              "type": "string"
                            },
                            "type": {
                              "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track\n\n**Possible Values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n- `commentary`: Commentary to accompany the video\n- `language`: Alternate language option than the one already present in the video\n- `music`: Alternate music selection\n- `other`: Anything else\n",
                              "enum": [
                                "audio-description",
                                "commentary",
                                "language",
                                "music",
                                "other"
                              ]
                            },
                            "language": {
                              "description": "Language dialect of the audio track When a `name` is not provided, `language` is used as the audio label",
                              "type": "string"
                            },
                            "language_code": {
                              "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the audio track",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update an audio track",
        "description": "Updates the metadata of a specific audio track resource\n",
        "tags": [
          "audio tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "audio_track_id",
            "description": "Unique identifier for an audio track resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the audio track",
                        "type": "string"
                      },
                      "type": {
                        "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track\n\n**Possible Values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n- `commentary`: Commentary to accompany the video\n- `language`: Alternate language option than the one already present in the video\n- `music`: Alternate music selection\n- `other`: Anything else\n",
                        "enum": [
                          "audio-description",
                          "commentary",
                          "language",
                          "music",
                          "other"
                        ]
                      },
                      "language": {
                        "description": "Language dialect of the audio track When a `name` is not provided, `language` is used as the audio label",
                        "type": "string"
                      },
                      "language_code": {
                        "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the audio track",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resource successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the audio track",
                              "type": "string"
                            },
                            "type": {
                              "description": "([Alternate audio tracks](https://developer.jwplayer.com/jwplayer/docs/stream-manage-alternate-audio-tracks) only) Represents the purpose or content of the audio track\n\n**Possible Values**:\n- `audio-description`: Audio descriptions of what is happening in the video\n- `commentary`: Commentary to accompany the video\n- `language`: Alternate language option than the one already present in the video\n- `music`: Alternate music selection\n- `other`: Anything else\n",
                              "enum": [
                                "audio-description",
                                "commentary",
                                "language",
                                "music",
                                "other"
                              ]
                            },
                            "language": {
                              "description": "Language dialect of the audio track When a `name` is not provided, `language` is used as the audio label",
                              "type": "string"
                            },
                            "language_code": {
                              "description": "[ISO 639-1 language code](https://id.loc.gov/vocabulary/iso639-1.html) of the audio track",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an audio track",
        "description": "Deletes a specific audio track resource\n\nDeleted audio tracks are **permanently removed** and will not be available for playback.\n\n**NOTE**: Default audio tracks **cannot** be deleted.\n",
        "tags": [
          "audio tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "original_id",
            "description": "Unique identifier for an original resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "audio_track_id",
            "description": "Unique identifier for an audio track resource",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted"
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Request conflicts with state of target resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/timings/": {
      "get": {
        "tags": [
          "ssai"
        ],
        "summary": "List media timings sets",
        "description": "List all timings sets for a media\n",
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request to list timings successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "timings": {
                          "description": "Array with all timing sets for a media\n",
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "metadata"
                                ],
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "ad_timings": {
                                        "type": "object",
                                        "properties": {
                                          "timings": {
                                            "type": "array",
                                            "description": "List of ad timecodes",
                                            "maxItems": 20,
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "timecode": {
                                                  "type": "string",
                                                  "description": "Ad timecode",
                                                  "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                                  "example": "00:00:05.345"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ssai"
        ],
        "summary": "Create a media timings set",
        "description": "Create a set of ad timings for a media\n",
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "metadata"
                ],
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "ad_timings": {
                        "type": "object",
                        "properties": {
                          "timings": {
                            "type": "array",
                            "description": "List of ad timecodes",
                            "maxItems": 20,
                            "items": {
                              "type": "object",
                              "properties": {
                                "timecode": {
                                  "type": "string",
                                  "description": "Ad timecode",
                                  "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                  "example": "00:00:05.345"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request to create timing successful",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "metadata"
                      ],
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "ad_timings": {
                              "type": "object",
                              "properties": {
                                "timings": {
                                  "type": "array",
                                  "description": "List of ad timecodes",
                                  "maxItems": 20,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "timecode": {
                                        "type": "string",
                                        "description": "Ad timecode",
                                        "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                        "example": "00:00:05.345"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/timings/{timing_id}/": {
      "get": {
        "tags": [
          "ssai"
        ],
        "summary": "Get a media timings set",
        "description": "Get a specific set of ad timings for a media\n",
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "timing_id",
            "description": "Unique alphanumeric ID of a set of media timings",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "metadata"
                      ],
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "ad_timings": {
                              "type": "object",
                              "properties": {
                                "timings": {
                                  "type": "array",
                                  "description": "List of ad timecodes",
                                  "maxItems": 20,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "timecode": {
                                        "type": "string",
                                        "description": "Ad timecode",
                                        "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                        "example": "00:00:05.345"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ssai"
        ],
        "summary": "Update a media timings set",
        "description": "Update a specific set of ad timings for a media\n",
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "timing_id",
            "description": "Unique alphanumeric ID of a set of media timings",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "metadata"
                ],
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "ad_timings": {
                        "type": "object",
                        "properties": {
                          "timings": {
                            "type": "array",
                            "description": "List of ad timecodes",
                            "maxItems": 20,
                            "items": {
                              "type": "object",
                              "properties": {
                                "timecode": {
                                  "type": "string",
                                  "description": "Ad timecode",
                                  "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                  "example": "00:00:05.345"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "metadata"
                      ],
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "ad_timings": {
                              "type": "object",
                              "properties": {
                                "timings": {
                                  "type": "array",
                                  "description": "List of ad timecodes",
                                  "maxItems": 20,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "timecode": {
                                        "type": "string",
                                        "description": "Ad timecode",
                                        "pattern": "^(?!00:00:00:000)[0-2][0-3]:[0-5][0-9]:[0-5][0-9].[0-9]{3}$",
                                        "example": "00:00:05.345"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ssai"
        ],
        "summary": "Delete a media timings set",
        "description": "Delete a specific set of ad timings for a media\n",
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "timing_id",
            "description": "Unique alphanumeric ID of a set of media timings",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Timings set successfully deleted"
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/text_tracks/": {
      "get": {
        "summary": "List text tracks",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "q",
            "description": "Allows for [querying results](https://developer.jwplayer.com/jwplayer/reference/building-a-request#query-parameter-q)\n\nExample: `srclang:+en`\n\nText tracks can be queried by the following attributes:\n  - `id`\n  - `label`\n  - `srclang`\n  - `status`\n  - `track_kind`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "description": "Allows for sorting results\n\nExample: `sort=created:dsc`\n\nSort order can be one of `asc`, `dsc`\n\nText tracks can be sorted by the following attributes:\n  - `created`\n  - `last_modified`\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "created:dsc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resources successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer",
                          "description": "Offset for returned resources",
                          "example": 1
                        },
                        "page_length": {
                          "type": "integer",
                          "description": "Maximum number of resources to return",
                          "example": 10
                        },
                        "total": {
                          "type": "integer",
                          "description": "Number of resources available before pagination",
                          "example": 1
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "text_tracks": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "schema": {
                                    "type": "string",
                                    "example": "https://schema.jwplayer.com/types/thumbnail.json"
                                  },
                                  "id": {
                                    "description": "Unique identifier for a resource",
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 8,
                                    "example": "Ny05CEfj",
                                    "pattern": "^[A-Za-z0-9]+$"
                                  },
                                  "created": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was created",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "last_modified": {
                                    "type": "string",
                                    "description": "Date and time at which the resource was most recently modified",
                                    "example": "2019-09-25T15:29:11.042095+00:00"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Name of the type of resource."
                                  },
                                  "relationships": {
                                    "type": "object",
                                    "description": "Ancilliary resources associated to the primary resource being read"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "metadata": {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                                        "type": "string"
                                      },
                                      "srclang": {
                                        "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                                        "type": "string"
                                      },
                                      "position": {
                                        "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  "delivery_url": {
                                    "type": "string",
                                    "description": "URL to access the text track This URL is only returned when the text track status is `ready` or `draft`."
                                  },
                                  "error_message": {
                                    "type": "string",
                                    "description": "A human-readable error message for describing upload failures"
                                  },
                                  "track_kind": {
                                    "description": "Kind of text track\nThis corresponds with the HTML `<track>` element `kind` attribute.",
                                    "type": "string",
                                    "enum": [
                                      "captions",
                                      "chapters",
                                      "descriptions",
                                      "metadata",
                                      "subtitles"
                                    ],
                                    "example": "captions"
                                  },
                                  "upload_link": {
                                    "type": "string",
                                    "description": "Presigned S3 link for uploading a track"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a text track",
        "description": "Generate a text track for the associated media. Each media can have a maximum of 50 text tracks.",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "upload": {
                    "type": "object",
                    "properties": {
                      "file_format": {
                        "description": "Text track file format\n\nThis is **required** for the `direct` upload method. For `fetch` uploads, it is required when the `download_url` file type is ambiguous.\n",
                        "type": "string",
                        "enum": [
                          "srt",
                          "vtt"
                        ]
                      },
                      "auto_publish": {
                        "description": "Whether the track is published after being uploaded\n\nIf `false`, the track is set to `draft` status after being successfully uploaded.\n",
                        "type": "boolean",
                        "default": true
                      },
                      "method": {
                        "enum": [
                          "direct",
                          "fetch"
                        ],
                        "type": "string",
                        "description": "Upload process used to add a track to an account"
                      },
                      "mime_type": {
                        "type": "string",
                        "description": "Mime type of the uploaded asset\n\nIf `mime_type` is defined, the `mime_type` value must be used as the `Content-Type` header on the upload request. If `mime_type` is excluded, no `Content-Type` header should be present on the upload request.\n",
                        "enum": [
                          "text/vtt",
                          "text/plain"
                        ]
                      },
                      "download_url": {
                        "description": "URL of the text track to fetch\n\nThis is **required** for the `fetch` upload method\n"
                      }
                    },
                    "required": [
                      "method"
                    ]
                  },
                  "metadata": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "label": {
                            "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                            "type": "string"
                          },
                          "srclang": {
                            "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                            "type": "string"
                          },
                          "position": {
                            "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                            "type": "integer"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "track_kind": {
                            "description": "Kind of text track\nThis corresponds with the HTML `<track>` element `kind` attribute.",
                            "type": "string",
                            "enum": [
                              "captions",
                              "chapters",
                              "descriptions",
                              "metadata",
                              "subtitles"
                            ],
                            "example": "captions"
                          }
                        },
                        "required": [
                          "track_kind"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                              "type": "string"
                            },
                            "srclang": {
                              "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                              "type": "string"
                            },
                            "position": {
                              "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                              "type": "integer"
                            }
                          }
                        },
                        "delivery_url": {
                          "type": "string",
                          "description": "URL to access the text track This URL is only returned when the text track status is `ready` or `draft`."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "A human-readable error message for describing upload failures"
                        },
                        "track_kind": {
                          "description": "Kind of text track\nThis corresponds with the HTML `<track>` element `kind` attribute.",
                          "type": "string",
                          "enum": [
                            "captions",
                            "chapters",
                            "descriptions",
                            "metadata",
                            "subtitles"
                          ],
                          "example": "captions"
                        },
                        "upload_link": {
                          "type": "string",
                          "description": "Presigned S3 link for uploading a track"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Request cannot be created because media reached maximum limit of 50.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/text_tracks/{track_id}/": {
      "get": {
        "summary": "Get a text track",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "track_id",
            "description": "Unique alphanumeric ID of the text track",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                              "type": "string"
                            },
                            "srclang": {
                              "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                              "type": "string"
                            },
                            "position": {
                              "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                              "type": "integer"
                            }
                          }
                        },
                        "delivery_url": {
                          "type": "string",
                          "description": "URL to access the text track This URL is only returned when the text track status is `ready` or `draft`."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "A human-readable error message for describing upload failures"
                        },
                        "track_kind": {
                          "description": "Kind of text track\nThis corresponds with the HTML `<track>` element `kind` attribute.",
                          "type": "string",
                          "enum": [
                            "captions",
                            "chapters",
                            "descriptions",
                            "metadata",
                            "subtitles"
                          ],
                          "example": "captions"
                        },
                        "upload_link": {
                          "type": "string",
                          "description": "Presigned S3 link for uploading a track"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a text track",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "track_id",
            "description": "Unique alphanumeric ID of the text track",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                        "type": "string"
                      },
                      "srclang": {
                        "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                        "type": "string"
                      },
                      "position": {
                        "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resource successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "example": "https://schema.jwplayer.com/types/thumbnail.json"
                        },
                        "id": {
                          "description": "Unique identifier for a resource",
                          "type": "string",
                          "minLength": 8,
                          "maxLength": 8,
                          "example": "Ny05CEfj",
                          "pattern": "^[A-Za-z0-9]+$"
                        },
                        "created": {
                          "type": "string",
                          "description": "Date and time at which the resource was created",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "last_modified": {
                          "type": "string",
                          "description": "Date and time at which the resource was most recently modified",
                          "example": "2019-09-25T15:29:11.042095+00:00"
                        },
                        "type": {
                          "type": "string",
                          "description": "Name of the type of resource."
                        },
                        "relationships": {
                          "type": "object",
                          "description": "Ancilliary resources associated to the primary resource being read"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "label": {
                              "description": "Label of the text track\n\nA maximum of 50 characters is permitted.\n\nFor `captions` and `subtitles` tracks, this property is the display name in the JW Player settings menu.\nFor `chapters`, `descriptions`, and `metadata`  tracks, this property serves as a name for the track.\n\n**NOTE**: This label cannot be named `default`.\n",
                              "type": "string"
                            },
                            "srclang": {
                              "description": "Language of the text track data\nA maximum of 32 characters is permitted.\nPrimarily applicable for `captions` and `subtitles`, this value corresponds to the `srclang` attribute of the `<track>` element.",
                              "type": "string"
                            },
                            "position": {
                              "description": "(Captions and subtitles only) Determines the location of a track in two contexts:\n\n  - Location in a media\u2019s list of tracks in the Delivery API\n  - Location in the captions settings menu of the JW Player.\n\nThe value of `position` cannot exceed the highest index of all subtitles and captions associated to the media.",
                              "type": "integer"
                            }
                          }
                        },
                        "delivery_url": {
                          "type": "string",
                          "description": "URL to access the text track This URL is only returned when the text track status is `ready` or `draft`."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "A human-readable error message for describing upload failures"
                        },
                        "track_kind": {
                          "description": "Kind of text track\nThis corresponds with the HTML `<track>` element `kind` attribute.",
                          "type": "string",
                          "enum": [
                            "captions",
                            "chapters",
                            "descriptions",
                            "metadata",
                            "subtitles"
                          ],
                          "example": "captions"
                        },
                        "upload_link": {
                          "type": "string",
                          "description": "Presigned S3 link for uploading a track"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a text track",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "track_id",
            "description": "Unique alphanumeric ID of the text track",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Text track successfully deleted"
          },
          "404": {
            "description": "Resource with ID supplied does not exist in account and object namespace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/text_tracks/{track_id}/publish/": {
      "put": {
        "summary": "Publish a track",
        "description": "Enables a text track to be delivered via the Delivery API by changing the track status from `draft` to `ready`.",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "track_id",
            "description": "Unique alphanumeric ID of the text track",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful"
          },
          "409": {
            "description": "Request conflicts with state of target resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/sites/{site_id}/media/{media_id}/text_tracks/{track_id}/unpublish/": {
      "put": {
        "summary": "Unpublish a track",
        "description": "Prevents a text track from delivering via the Delivery API by changing the track status from `ready` to `draft`.",
        "tags": [
          "text tracks"
        ],
        "parameters": [
          {
            "name": "site_id",
            "description": "Unique alphanumeric ID of the site",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "media_id",
            "description": "Unique alphanumeric ID of the media",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          },
          {
            "name": "track_id",
            "description": "Unique alphanumeric ID of the text track",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Unique identifier for a resource",
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "example": "Ny05CEfj",
              "pattern": "^[A-Za-z0-9]+$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Request successful"
          },
          "409": {
            "description": "Request conflicts with state of target resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "One or many errors indicating that something prevented the request from being performed successfully",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Short machine-readable identifier for the error",
                        "type": "string",
                        "example": "error_code"
                      },
                      "description": {
                        "description": "Human-readable message explaining the error",
                        "type": "string",
                        "example": "Something went wrong."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "v2ApiSecret": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "v2ApiSecret": []
    }
  ]
}